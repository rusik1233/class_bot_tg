import telebot
import os
from dotenv import load_dotenv
from gtm_im import model_work
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

load_dotenv()
TG_API_TOKEN = os.getenv('TG_API_TOKEN')
bot = telebot.TeleBot(TG_API_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_messages = {}

@bot.message_handler(commands=['start', 'help'])
def start_command(message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = KeyboardButton('üì∏ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ')
    markup.add(btn1)
    
    text = f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}!\n\n' if message.text == '/start' else ''
    text += '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ —è –æ–ø—Ä–µ–¥–µ–ª—é –ø–æ—Ä–æ–¥—É –∫–æ—à–∫–∏'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    sent_msg = bot.send_message(message.chat.id, text, reply_markup=markup)
    user_messages[message.chat.id] = sent_msg.message_id

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        if message.chat.id in user_messages:
            try:
                bot.delete_message(message.chat.id, user_messages[message.chat.id])
            except:
                pass
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ
        processing_msg = bot.send_message(message.chat.id, "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
        
        photo = message.photo[-1]
        file_info = bot.get_file(photo.file_id)
        file_bytes = bot.download_file(file_info.file_path)

        image_path = f'user_file/temp_{message.message_id}.jpg'
        os.makedirs('user_file', exist_ok=True)
        
        with open(image_path, 'wb') as f:
            f.write(file_bytes)

        image_class, percentage_probability, error = model_work(image_path)
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        try:
            os.remove(image_path)
        except:
            pass
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("üîÑ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ", callback_data="new_photo"))
        if error:
            bot.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞: {error}", 
                                message.chat.id, 
                                processing_msg.message_id,
                                reply_markup=keyboard)
            return

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton("üîÑ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ", callback_data="new_photo"))
        
        result_text = (f'üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:\n\n'
                      f'üê± –ü–æ—Ä–æ–¥–∞: {image_class}\n'
                      f'üìà –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {percentage_probability}%')
        
        # –ó–∞–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        bot.edit_message_text(result_text,
                            message.chat.id,
                            processing_msg.message_id,
                            reply_markup=keyboard)
        
    except Exception as e:
        bot.reply_to(message, text=f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}')
        

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == "new_photo":
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.delete_message(call.message.chat.id, call.message.message_id)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(KeyboardButton('üì∏ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        sent_msg = bot.send_message(call.message.chat.id, 
                                  "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è",
                                  reply_markup=markup)
        user_messages[call.message.chat.id] = sent_msg.message_id

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == 'üì∏ –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ':
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")
    else:
        bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è")

if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()